{"version":3,"sources":["webpack:///./src/parser/core/modules/Suggestions/Suggestion.js","webpack:///./src/parser/core/modules/Suggestions/Component.js","webpack:///./src/parser/core/modules/Suggestions/Suggestions.js","webpack:///./src/parser/core/modules/Suggestions/index.js","webpack:///./src/parser/core/modules/Checklist/Rule.js","webpack:///./src/parser/core/modules/Checklist/Component.js","webpack:///./src/parser/core/modules/Checklist/Checklist.js","webpack:///./src/parser/core/modules/Checklist/Requirement.js","webpack:///./src/parser/core/modules/Checklist/index.js","webpack:///./src/components/ui/Rotation.tsx","webpack:///./src/mathjsCustom.js","webpack:///./src/components/ui/Rotation.module.css?31d9","webpack:///./src/parser/core/modules/Suggestions/Suggestions.module.css?3c09","webpack:///./src/parser/core/modules/Checklist/Checklist.module.css?cfc9","webpack:///./src/parser/jobs/war/modules/Gauge.tsx","webpack:///./src/parser/jobs/war/modules/InnerRelease.tsx","webpack:///./src/parser/jobs/war/modules/StormsEye.js","webpack:///./src/parser/jobs/war/modules/Cooldowns.js","webpack:///./src/parser/jobs/war/modules/index.js"],"names":["SEVERITY","MORBID","MAJOR","MEDIUM","MINOR","IGNORE","undefined","Suggestion","constructor","options","this","icon","content","why","severity","Object","keys","forEach","key","TieredSuggestion","super","tiers","value","matcher","matchClosestLower","SEVERITY_LABEL_PROPS","id","color","Suggestions","React","Component","arguments","onToggleShowMinor","_","data","settingsStore","context","setShowMinorSuggestions","checked","render","showMinor","showMinorSuggestions","suggestions","props","filter","suggestion","hasMinor","some","Checkbox","toggle","label","defaultChecked","onChange","className","styles","checkbox","items","map","index","item","src","alt","extra","Label","horizontal","length","contextType","StoreContext","__decorate","observer","Module","_suggestions","add","push","console","error","output","sort","a","b","handle","displayOrder","DISPLAY_ORDER","SUGGESTIONS","displayMode","DISPLAY_MODE","FULL","title","TARGET","SUCCESS","WARN","FAIL","DEFAULT_TARGET","Rule","name","description","requirements","target","DEFAULT","percent","percents","requirement","math","mean","TieredRule","RULE_STYLES","text","autoExpand","Checklist","rules","expanded","panels","rule","ruleStyles","tier","Math","min","Icon","toFixed","Progress","progress","size","Accordion","exclusive","defaultActiveIndex","styled","fluid","_rules","sortedRules","CHECKLIST","Requirement","_percent","overrideDisplay","Rotation","events","container","event","action","getDataBy","ACTIONS","ability","guid","autoAttack","linkClassName","link","ogcd","onGcd","iconSize","gcdSize","ogcdSize","Link","ITEM_ID_OFFSET","ItemLink","ActionLink","cn","showName","create","meanDependencies","modeDependencies","stdDependencies","module","exports","BEAST_MODIFIERS","Map","MAIM","combo","STORMS_EYE","STORMS_PATH","MYTHRIL_TEMPEST","INFURIATE","cast","FELL_CLEAVE","DECIMATE","UPHEAVAL","ONSLAUGHT","CHAOTIC_CYCLONE","INNER_CHAOS","RAGE_USAGE_SEVERITY","20","50","INFURIATE_REDUCERS","INFURIATE_CDR","Gauge","CoreGauge","beastGauge","CounterGauge","chart","JOBS","WARRIOR","colour","init","addHook","by","abilityId","Array","from","onGaugeModifier","cooldowns","reduceCooldown","onComplete","amount","get","type","combatants","selected","hasStatus","STATUSES","INNER_RELEASE","max","modify","overCap","dependency","__metadata","Combatants","prototype","Cooldowns","InnerRelease","BuffWindowModule","buffAction","buffStatus","expectedGCDs","expectedPerWindow","suggestionContent","severityTiers","1","requiredGCDs","actions","trackedActions","trackedBadActions","showIcon","STORMS_EYE_DURATION","STORMS_EYE_BUFFER","StormsEye","_stormsEyeUses","_earlyApplications","_onStormsEyeApplication","_onComplete","unshift","timestamp","checklist","getUptimePercent","getStatusUptime","parser","player","fightDuration","invuln","getInvulnerableUptime","dependencies","CoreCooldowns","cooldownOrder","DEFIANCE","HOLMGANG","VENGEANCE","RAMPART","THRILL_OF_BATTLE","RAW_INTUITION","EQUILIBRIUM","SHAKE_IT_OFF","REPRISAL","PROVOKE","SHIRK","INTERJECT","LOW_BLOW"],"mappings":"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","file":"assets/jobs-war.0b2bae45.js","sourcesContent":["import { matchClosestLower } from 'utilities';\nexport const SEVERITY = {\n    // NOTE: Don't use MORBID, It's for deaths. I _will_ block the PRs on this.\n    MORBID: 0,\n    MAJOR: 1,\n    MEDIUM: 2,\n    MINOR: 3,\n    // The matchClosest fall back to undefined, so let's use that for ignore too\n    IGNORE: undefined,\n};\nexport default class Suggestion {\n    constructor(options) {\n        this.icon = ''; // TODO: default image\n        this.content = '';\n        this.why = '';\n        this.severity = SEVERITY.MEDIUM;\n        Object.keys(options || {}).forEach(key => {\n            this[key] = options[key];\n        });\n    }\n}\nexport class TieredSuggestion extends Suggestion {\n    constructor(options) {\n        super({\n            tiers: {},\n            value: 0,\n            matcher: matchClosestLower,\n            ...options,\n        });\n    }\n    get severity() {\n        return this.matcher(this.tiers, this.value);\n    }\n    // noop setter so it doesn't die from the base class\n    set severity(value) { }\n}\n","import { __decorate } from \"tslib\";\nimport { Trans } from '@lingui/react';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Checkbox, Label } from 'semantic-ui-react';\n// Direct path import 'cus it'll be a dep loop otherwise\nimport { SEVERITY } from 'parser/core/modules/Suggestions/Suggestion';\nimport { SettingsStore } from 'store/settings';\nimport styles from './Suggestions.module.css';\nimport { StoreContext } from 'store';\nconst SEVERITY_LABEL_PROPS = {\n    [SEVERITY.MORBID]: { content: <Trans id=\"core.suggestions.severity.morbid\">Morbid</Trans>, color: 'black', icon: 'times' },\n    [SEVERITY.MAJOR]: { content: <Trans id=\"core.suggestions.severity.major\">Major</Trans>, color: 'red', icon: 'arrow up' },\n    [SEVERITY.MEDIUM]: { content: <Trans id=\"core.suggestions.severity.medium\">Medium</Trans>, color: 'orange' },\n    [SEVERITY.MINOR]: { content: <Trans id=\"core.suggestions.severity.minor\">Minor</Trans>, color: 'blue', icon: 'arrow down' },\n};\nlet Suggestions = class Suggestions extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onToggleShowMinor = (_, data) => {\n            const { settingsStore } = this.context;\n            settingsStore.setShowMinorSuggestions(data.checked);\n        };\n    }\n    render() {\n        const showMinor = this.context.settingsStore.showMinorSuggestions;\n        const suggestions = this.props.suggestions.filter(suggestion => showMinor || suggestion.severity !== SEVERITY.MINOR);\n        const hasMinor = this.props.suggestions.some(suggestion => suggestion.severity === SEVERITY.MINOR);\n        return <>\n\t\t\t{hasMinor && <Checkbox toggle label={<label><Trans id=\"core.suggestion.show-minor\">Show minor</Trans></label>} defaultChecked={showMinor} onChange={this.onToggleShowMinor} className={styles.checkbox}/>}\n\t\t\t<div className={styles.items}>\n\t\t\t\t{suggestions.map((suggestion, index) => <div key={index} className={styles.item}>\n\t\t\t\t\t<img src={suggestion.icon} alt=\"\"/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{suggestion.content}\n\t\t\t\t\t\t<div className={styles.extra}>\n\t\t\t\t\t\t\t<Label horizontal {...SEVERITY_LABEL_PROPS[suggestion.severity]}/>\n\t\t\t\t\t\t\t{suggestion.why}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)}\n\t\t\t\t{suggestions.length === 0 && <div className={styles.item}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong><Trans id=\"core.suggestion.nothing\">There's nothing here!</Trans></strong><br />\n\t\t\t\t\t\t{hasMinor && <Trans id=\"core.suggestion.nothing-but-minor\">You can check over the minor suggestions by flicking the \"Show minor\" switch in the top right.</Trans>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t</>;\n    }\n};\nSuggestions.propTypes = {\n    settingsStore: PropTypes.instanceOf(SettingsStore),\n    suggestions: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.string.isRequired,\n        content: PropTypes.node.isRequired,\n        why: PropTypes.node.isRequired,\n        severity: PropTypes.number.isRequired,\n    })).isRequired,\n};\nSuggestions.contextType = StoreContext;\nSuggestions = __decorate([\n    observer\n], Suggestions);\nexport default Suggestions;\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport Suggestion, { SEVERITY } from './Suggestion';\nimport SuggestionsComponent from './Component';\nimport Module, { DISPLAY_MODE } from 'parser/core/Module';\nimport DISPLAY_ORDER from '../DISPLAY_ORDER';\nexport default class Suggestions extends Module {\n    constructor() {\n        super(...arguments);\n        this._suggestions = [];\n    }\n    add(suggestion) {\n        if (!(suggestion instanceof Suggestion)) {\n            console.error('TODO: Proper error message for passing a non-suggestion to the suggestion add handler');\n            return;\n        }\n        this._suggestions.push(suggestion);\n    }\n    output() {\n        // Only show the suggestions module if it's had things sent to it\n        if (this._suggestions.length === 0) {\n            return false;\n        }\n        // Sort suggestions with most important at the top, and remove ignored\n        const suggestions = this._suggestions\n            .filter(suggestion => suggestion.severity !== SEVERITY.IGNORE)\n            .sort((a, b) => a.severity - b.severity);\n        // Rendering is in a specialised component so it's got some state to work with\n        return <SuggestionsComponent suggestions={suggestions}/>;\n    }\n}\nSuggestions.handle = 'suggestions';\nSuggestions.displayOrder = DISPLAY_ORDER.SUGGESTIONS;\nSuggestions.displayMode = DISPLAY_MODE.FULL;\nSuggestions.title = t('core.suggestions.title') `Suggestions`;\n","export { default } from './Suggestions';\nexport { default as Suggestion } from './Suggestion';\nexport * from './Suggestion';\n","import math from 'mathjsCustom';\nimport { matchClosestLower } from 'utilities';\nimport { DISPLAY_ORDER } from 'parser/core/Module';\nexport const TARGET = {\n    SUCCESS: 2,\n    WARN: 1,\n    FAIL: undefined,\n};\nconst DEFAULT_TARGET = 95;\nexport default class Rule {\n    constructor(options) {\n        this.name = '';\n        this.description = null;\n        this.requirements = [];\n        this.target = DEFAULT_TARGET;\n        this.displayOrder = DISPLAY_ORDER.DEFAULT;\n        Object.keys(options || {}).forEach(key => {\n            this[key] = options[key];\n        });\n    }\n    get tier() {\n        return matchClosestLower({ [this.target]: TARGET.SUCCESS }, this.percent);\n    }\n    get percent() {\n        // WoWA has a bunch of different modes for this stuff, I'm just going to use mean for now. Because I'm mean. Hue.\n        // TODO: different requirement modes\n        const percents = this.requirements.map(requirement => requirement.percent);\n        return percents.length ? math.mean(percents) : 0;\n    }\n}\nexport class TieredRule extends Rule {\n    constructor(options) {\n        super({\n            tiers: {},\n            matcher: matchClosestLower,\n            ...options,\n        });\n    }\n    get tier() {\n        return this.matcher(this.tiers, this.percent);\n    }\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Accordion, Icon, Progress } from 'semantic-ui-react';\nimport { TARGET } from 'parser/core/modules/Checklist/Rule';\nimport styles from './Checklist.module.css';\nconst RULE_STYLES = {\n    [TARGET.SUCCESS]: { text: 'text-success', color: 'green', icon: 'checkmark', autoExpand: false },\n    [TARGET.WARN]: { text: 'text-warning', color: 'yellow', icon: 'warning sign', autoExpand: true },\n    [TARGET.FAIL]: { text: 'text-error', color: 'red', icon: 'remove', autoExpand: true },\n};\nclass Checklist extends Component {\n    render() {\n        const { rules } = this.props;\n        // If there's no rules, just stop now\n        if (!rules.length) {\n            return false;\n        }\n        const expanded = [];\n        const panels = rules.map((rule, index) => {\n            const ruleStyles = RULE_STYLES[rule.tier];\n            // We cap the percent @ 100 in production mode - calculations can always be a bit janky\n            let percent = rule.percent;\n            if (process.env.NODE_ENV === 'production') {\n                percent = Math.min(percent, 100);\n            }\n            if (ruleStyles.autoExpand) {\n                expanded.push(index);\n            }\n            return {\n                // This should be a handle of some sort\n                key: index,\n                title: {\n                    className: styles.title,\n                    content: <>\n\t\t\t\t\t\t<Icon name={ruleStyles.icon} className={ruleStyles.text}/>\n\t\t\t\t\t\t{rule.name}\n\t\t\t\t\t\t<div className={styles.percent + ' ' + ruleStyles.text}>\n\t\t\t\t\t\t\t{percent.toFixed(1)}%\n\t\t\t\t\t\t\t<Progress percent={percent} className={styles.progress} size=\"small\" color={ruleStyles.color}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>,\n                },\n                content: {\n                    content: <>\n\t\t\t\t\t\t{rule.description && <div className={styles.description}>\n\t\t\t\t\t\t\t<Icon name=\"info\" size=\"large\"/>\n\t\t\t\t\t\t\t<p>{rule.description}</p>\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{rule.requirements.map((requirement, index) => <li key={index}>\n\t\t\t\t\t\t\t\t\t{requirement.name}: {requirement.content}\n\t\t\t\t\t\t\t\t</li>)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</>,\n                },\n            };\n        });\n        return <Accordion exclusive={false} panels={panels} defaultActiveIndex={expanded} styled fluid/>;\n    }\n}\nChecklist.propTypes = {\n    rules: PropTypes.arrayOf(PropTypes.shape({\n        percent: PropTypes.number.isRequired,\n        tier: PropTypes.oneOf(Object.values(TARGET)),\n        name: PropTypes.node.isRequired,\n        requirements: PropTypes.arrayOf(PropTypes.shape({\n            name: PropTypes.node.isRequired,\n            content: PropTypes.string.isRequired,\n        })),\n    })),\n};\nexport default (Checklist);\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport Rule from './Rule';\nimport ChecklistComponent from './Component';\nimport Module, { DISPLAY_MODE } from 'parser/core/Module';\nimport DISPLAY_ORDER from '../DISPLAY_ORDER';\nexport default class Checklist extends Module {\n    constructor() {\n        super(...arguments);\n        this._rules = [];\n    }\n    add(rule) {\n        if (!(rule instanceof Rule)) {\n            console.error('TODO: This error message');\n            return;\n        }\n        this._rules.push(rule);\n    }\n    output() {\n        const sortedRules = [...this._rules];\n        sortedRules.sort((a, b) => a.displayOrder - b.displayOrder);\n        return <ChecklistComponent rules={sortedRules}/>;\n    }\n}\nChecklist.handle = 'checklist';\nChecklist.title = t('core.checklist.title') `Checklist`;\nChecklist.displayOrder = DISPLAY_ORDER.CHECKLIST;\nChecklist.displayMode = DISPLAY_MODE.FULL;\n","export default class Requirement {\n    constructor(options) {\n        this.name = '';\n        this._percent = null;\n        this.value = null;\n        this.target = 100;\n        this.overrideDisplay = null;\n        Object.keys(options || {}).forEach(key => {\n            this[key] = options[key];\n        });\n    }\n    get content() {\n        if (this.overrideDisplay !== null) {\n            return this.overrideDisplay;\n        }\n        if (this._percent !== null || this.value === null) {\n            return `${this.percent.toFixed(2)}%`;\n        }\n        return `${this.value.toFixed(0)}/${this.target.toFixed(0)}`; //avoid weird floating point shit\n    }\n    get percent() {\n        if (this._percent === null) {\n            if (this.value === null) {\n                return 0;\n            }\n            return 100 * (((typeof this.value === 'function') ? this.value() : this.value) || 0) / this.target;\n        }\n        return ((typeof this._percent === 'function') ? this._percent() : this._percent) || 0;\n    }\n    set percent(value) {\n        this._percent = value;\n    }\n}\n","export { default } from './Checklist';\nexport { default as Rule, TieredRule, TARGET } from './Rule';\nexport { default as Requirement } from './Requirement';\n","import cn from 'classnames';\nimport { ActionLink, ItemLink } from 'components/ui/DbLink';\nimport { getDataBy } from 'data';\nimport ACTIONS, { ITEM_ID_OFFSET } from 'data/ACTIONS';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport styles from './Rotation.module.css';\nexport default class Rotation extends Component {\n    render() {\n        const { events } = this.props;\n        return <div className={styles.container}>\n\t\t\t{events.map((event, index) => {\n            const action = getDataBy(ACTIONS, 'id', event.ability.guid);\n            // Don't bother showing the icon for autos\n            if (!action || action.autoAttack) {\n                return;\n            }\n            // Stuff like the duty action doesn't have an icon mapping yet.\n            // TODO: Sort this out if it's a problem\n            if (!action.icon) {\n                console.error(event, 'event ability has no icon');\n                return false;\n            }\n            const linkClassName = [\n                styles.link,\n                { [styles.ogcd]: !action.onGcd },\n            ];\n            const iconSize = action.onGcd ? styles.gcdSize : styles.ogcdSize;\n            const isItem = action.id >= ITEM_ID_OFFSET;\n            const Link = isItem ? ItemLink : ActionLink;\n            return <div key={index} className={cn(...linkClassName)}>\n\t\t\t\t\t<Link showName={false} iconSize={iconSize} {...action}/>\n\t\t\t\t</div>;\n        })}\n\t\t</div>;\n    }\n}\nRotation.propTypes = {\n    events: PropTypes.arrayOf(PropTypes.shape({\n        ability: PropTypes.shape({\n            guid: PropTypes.number.isRequired,\n        }).isRequired,\n    })).isRequired,\n};\n","import { create, meanDependencies, modeDependencies, stdDependencies, } from 'mathjs/number';\nexport default create({\n    meanDependencies,\n    modeDependencies,\n    stdDependencies,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gcdSize\":\"40px\",\"ogcdSize\":\"30px\",\"container\":\"Rotation-module_container__32KS2\",\"link\":\"Rotation-module_link__2T3fu\",\"ogcd\":\"Rotation-module_ogcd__3oBO8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gutter\":\"20px\",\"checkbox\":\"Suggestions-module_checkbox__1Z22N\",\"items\":\"Suggestions-module_items__3sCkP\",\"item\":\"Suggestions-module_item__1yy1-\",\"extra\":\"Suggestions-module_extra__3WN2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lg\":\"(min-width: 992px)\",\"title\":\"Checklist-module_title__2ro7x\",\"percent\":\"Checklist-module_percent__EKBdj\",\"progress\":\"Checklist-module_progress__28lgp\",\"description\":\"Checklist-module_description__3Bf5O\"};","import { __decorate, __metadata } from \"tslib\";\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/react';\nimport ACTIONS from 'data/ACTIONS';\nimport JOBS from 'data/JOBS';\nimport STATUSES from 'data/STATUSES';\nimport { dependency } from 'parser/core/Module';\nimport Combatants from 'parser/core/modules/Combatants';\nimport Cooldowns from 'parser/core/modules/Cooldowns';\nimport { CounterGauge, Gauge as CoreGauge } from 'parser/core/modules/Gauge';\nimport Suggestions, { SEVERITY, TieredSuggestion } from 'parser/core/modules/Suggestions';\nimport React from 'react';\nconst BEAST_MODIFIERS = new Map([\n    // Builders\n    [ACTIONS.MAIM.id, { combo: 10 }],\n    [ACTIONS.STORMS_EYE.id, { combo: 10 }],\n    [ACTIONS.STORMS_PATH.id, { combo: 20 }],\n    [ACTIONS.MYTHRIL_TEMPEST.id, { combo: 20 }],\n    [ACTIONS.INFURIATE.id, { cast: 50 }],\n    // Spenders\n    [ACTIONS.FELL_CLEAVE.id, { cast: -50 }],\n    [ACTIONS.DECIMATE.id, { cast: -50 }],\n    [ACTIONS.UPHEAVAL.id, { cast: -20 }],\n    [ACTIONS.ONSLAUGHT.id, { cast: -20 }],\n    [ACTIONS.CHAOTIC_CYCLONE.id, { cast: -50 }],\n    [ACTIONS.INNER_CHAOS.id, { cast: -50 }],\n]);\nconst RAGE_USAGE_SEVERITY = {\n    20: SEVERITY.MINOR,\n    50: SEVERITY.MAJOR,\n};\nconst INFURIATE_REDUCERS = [\n    ACTIONS.FELL_CLEAVE.id,\n    ACTIONS.DECIMATE.id,\n    ACTIONS.CHAOTIC_CYCLONE.id,\n    ACTIONS.INNER_CHAOS.id,\n];\nconst INFURIATE_CDR = 5;\nexport class Gauge extends CoreGauge {\n    constructor() {\n        super(...arguments);\n        this.beastGauge = this.add(new CounterGauge({\n            chart: { label: 'Beast Gauge', color: JOBS.WARRIOR.colour },\n        }));\n    }\n    init() {\n        super.init();\n        this.addHook(['combo', 'cast'], { by: 'player', abilityId: Array.from(BEAST_MODIFIERS.keys()) }, this.onGaugeModifier);\n        this.addHook('cast', { by: 'player', abilityId: INFURIATE_REDUCERS }, () => this.cooldowns.reduceCooldown(ACTIONS.INFURIATE.id, INFURIATE_CDR));\n        this.addHook('complete', this.onComplete);\n    }\n    onGaugeModifier(event) {\n        const modifiers = BEAST_MODIFIERS.get(event.ability.guid) || {};\n        // Spenders are free during IR\n        let amount = modifiers[event.type] || 0;\n        if (this.combatants.selected.hasStatus(STATUSES.INNER_RELEASE.id)) {\n            amount = Math.max(amount, 0);\n        }\n        this.beastGauge.modify(amount);\n    }\n    onComplete() {\n        const { overCap } = this.beastGauge;\n        this.suggestions.add(new TieredSuggestion({\n            icon: ACTIONS.INFURIATE.icon,\n            content: <Trans id=\"war.gauge.suggestions.lost-rage.content\">\n\t\t\t\t\tAvoid letting your Beast Gauge overcap - the wasted resources may cost you uses of your spenders over the course of the fight.\n\t\t\t</Trans>,\n            why: <Trans id=\"war.gauge.suggestions.lost-rage.why\">\n\t\t\t\t{overCap} beast gauge lost to an overcapped gauge.\n\t\t\t</Trans>,\n            tiers: RAGE_USAGE_SEVERITY,\n            value: overCap,\n        }));\n    }\n}\nGauge.title = t('war.gauge.title') `Gauge Usage`;\n__decorate([\n    dependency,\n    __metadata(\"design:type\", Combatants)\n], Gauge.prototype, \"combatants\", void 0);\n__decorate([\n    dependency,\n    __metadata(\"design:type\", Cooldowns)\n], Gauge.prototype, \"cooldowns\", void 0);\n__decorate([\n    dependency,\n    __metadata(\"design:type\", Suggestions)\n], Gauge.prototype, \"suggestions\", void 0);\n","import { t } from '@lingui/macro';\nimport { Trans } from '@lingui/react';\nimport { ActionLink } from 'components/ui/DbLink';\nimport ACTIONS from 'data/ACTIONS';\nimport STATUSES from 'data/STATUSES';\nimport { BuffWindowModule } from 'parser/core/modules/BuffWindow';\nimport { SEVERITY } from 'parser/core/modules/Suggestions';\nimport React from 'react';\nexport default class InnerRelease extends BuffWindowModule {\n    constructor() {\n        super(...arguments);\n        this.buffAction = ACTIONS.INNER_RELEASE;\n        this.buffStatus = STATUSES.INNER_RELEASE;\n        this.expectedGCDs = {\n            expectedPerWindow: 5,\n            suggestionContent: <Trans id=\"war.ir.suggestions.missedgcd.content\">\n\t\t\tTry to land 5 GCDs during every <ActionLink {...ACTIONS.INNER_RELEASE}/> window. If you cannot do this with full uptime and no clipping, consider adjusting your gearset for more Skill Speed.\n\t\t</Trans>,\n            severityTiers: {\n                1: SEVERITY.MAJOR,\n            },\n        };\n        this.requiredGCDs = {\n            icon: ACTIONS.FELL_CLEAVE.icon,\n            actions: [\n                ACTIONS.FELL_CLEAVE,\n                ACTIONS.DECIMATE,\n            ],\n            suggestionContent: <Trans id=\"war.ir.suggestions.badgcd.content\">\n\t\t\tGCDs used during <ActionLink {...ACTIONS.INNER_RELEASE}/> should be limited to <ActionLink {...ACTIONS.FELL_CLEAVE}/> for optimal damage (or <ActionLink {...ACTIONS.DECIMATE}/> if three or more targets are present).\n\t\t</Trans>,\n            severityTiers: {\n                1: SEVERITY.MAJOR,\n            },\n        };\n        this.trackedActions = {\n            icon: ACTIONS.UPHEAVAL.icon,\n            actions: [\n                {\n                    action: ACTIONS.UPHEAVAL,\n                    expectedPerWindow: 1,\n                },\n                {\n                    action: ACTIONS.ONSLAUGHT,\n                    expectedPerWindow: 1,\n                },\n            ],\n            suggestionContent: <Trans id=\"war.ir.suggestions.trackedActions.content\">\n\t\t\tOne use of <ActionLink {...ACTIONS.UPHEAVAL}/> and one use of <ActionLink {...ACTIONS.ONSLAUGHT}/> should occur during every <ActionLink {...ACTIONS.INNER_RELEASE}/> window.\n\t\t</Trans>,\n            severityTiers: {\n                1: SEVERITY.MEDIUM,\n            },\n        };\n        this.trackedBadActions = {\n            icon: ACTIONS.INNER_CHAOS.icon,\n            actions: [\n                {\n                    action: ACTIONS.INNER_CHAOS,\n                    expectedPerWindow: 0,\n                },\n                {\n                    action: ACTIONS.CHAOTIC_CYCLONE,\n                    expectedPerWindow: 0,\n                },\n            ],\n            suggestionContent: <Trans id=\"war.ir.suggestions.trackedBadActions.content\">\n\t\t\tUsing <ActionLink {...ACTIONS.INNER_CHAOS}/> or <ActionLink {...ACTIONS.CHAOTIC_CYCLONE}/> inside of <ActionLink {...ACTIONS.INNER_RELEASE}/> should be avoided at all costs. These abilities are guaranteed to be a critical direct hit, and make no use of <ActionLink showIcon={false} {...ACTIONS.INNER_RELEASE}/>'s benefits.\n\t\t</Trans>,\n            severityTiers: {\n                1: SEVERITY.MAJOR,\n            },\n        };\n    }\n}\nInnerRelease.handle = 'ir';\nInnerRelease.title = t('war.ir.title') `Inner Release Usage`;\n","import { Trans } from '@lingui/react';\nimport React from 'react';\nimport { ActionLink } from 'components/ui/DbLink';\nimport ACTIONS from 'data/ACTIONS';\nimport STATUSES from 'data/STATUSES';\nimport Module from 'parser/core/Module';\nimport { Rule, Requirement } from 'parser/core/modules/Checklist';\nimport { Suggestion, SEVERITY } from 'parser/core/modules/Suggestions';\nconst STORMS_EYE_DURATION = 30000;\nconst STORMS_EYE_BUFFER = 7000;\nexport default class StormsEye extends Module {\n    constructor(...args) {\n        super(...args);\n        this._stormsEyeUses = [];\n        this._earlyApplications = 0;\n        const filter = {\n            by: 'player',\n            abilityId: STATUSES.STORMS_EYE.id,\n        };\n        this.addHook('applybuff', filter, this._onStormsEyeApplication);\n        this.addHook('refreshbuff', filter, this._onStormsEyeApplication);\n        this.addHook('complete', this._onComplete);\n    }\n    _onStormsEyeApplication(event) {\n        this._stormsEyeUses.unshift(event);\n        if (this._stormsEyeUses.length < 2) {\n            return;\n        }\n        const current = this._stormsEyeUses[0].timestamp;\n        const previous = this._stormsEyeUses[1].timestamp;\n        const timeSinceLastApplication = current - previous;\n        if (timeSinceLastApplication < STORMS_EYE_DURATION - STORMS_EYE_BUFFER) {\n            this._earlyApplications++;\n        }\n    }\n    _onComplete() {\n        this.checklist.add(new Rule({\n            name: <Trans id=\"war.stormseye.checklist.name\">Keep Storm's Eye Up</Trans>,\n            description: <Trans id=\"war.stormseye.checklist.description\">Storm's Eye increases your damage by 10%, it is a substantial part of a Warrior's damage.</Trans>,\n            target: 90,\n            requirements: [\n                new Requirement({\n                    name: <Trans id=\"war.stormseye.checklist.uptime\"><ActionLink {...ACTIONS.STORMS_EYE}/> uptime</Trans>,\n                    percent: () => this.getUptimePercent(),\n                }),\n            ],\n        }));\n        if (this._earlyApplications) {\n            this.suggestions.add(new Suggestion({\n                icon: ACTIONS.STORMS_EYE.icon,\n                content: <Trans id=\"war.suggestions.stormseye.content\">\n\t\t\t\t\t\tAvoid refreshing {ACTIONS.STORMS_EYE.name} significantly before its expiration -- That might be making you possibly lose <ActionLink {...ACTIONS.STORMS_PATH}/> uses.\n\t\t\t\t</Trans>,\n                severity: SEVERITY.MEDIUM,\n                why: <Trans id=\"war.suggestions.stormseye.why\">\n\t\t\t\t\t{this._earlyApplications} reapplications that were {STORMS_EYE_BUFFER / 1000} or more seconds before expiration.\n\t\t\t\t</Trans>,\n            }));\n        }\n    }\n    //\n    getUptimePercent() {\n        const statusUptime = this.combatants.getStatusUptime(STATUSES.STORMS_EYE.id, this.parser.player.id);\n        const fightUptime = this.parser.fightDuration - this.invuln.getInvulnerableUptime();\n        return (statusUptime / fightUptime) * 100;\n    }\n}\nStormsEye.handle = 'stormseye';\nStormsEye.dependencies = [\n    'checklist',\n    'combatants',\n    'invuln',\n    'suggestions',\n];\n","import CoreCooldowns from 'parser/core/modules/Cooldowns';\nimport ACTIONS from 'data/ACTIONS';\nexport default class Cooldowns extends CoreCooldowns {\n}\nCooldowns.cooldownOrder = [\n    // Stance\n    ACTIONS.DEFIANCE.id,\n    // Buffs\n    ACTIONS.INNER_RELEASE.id,\n    ACTIONS.INFURIATE.id,\n    // oGCD Damage\n    ACTIONS.UPHEAVAL.id,\n    ACTIONS.ONSLAUGHT.id,\n    // Personal Mitigation\n    ACTIONS.HOLMGANG.id,\n    ACTIONS.VENGEANCE.id,\n    ACTIONS.RAMPART.id,\n    ACTIONS.THRILL_OF_BATTLE.id,\n    ACTIONS.RAW_INTUITION.id,\n    ACTIONS.EQUILIBRIUM.id,\n    // Party Mitigation\n    ACTIONS.SHAKE_IT_OFF.id,\n    ACTIONS.REPRISAL.id,\n    // Tank Utility\n    ACTIONS.PROVOKE.id,\n    ACTIONS.SHIRK.id,\n    // Disrupt Utility\n    ACTIONS.INTERJECT.id,\n    ACTIONS.LOW_BLOW.id,\n];\n","import { Gauge } from './Gauge';\nimport InnerRelease from './InnerRelease';\nimport StormsEye from './StormsEye';\nimport Cooldowns from './Cooldowns';\nexport default [\n    Gauge,\n    InnerRelease,\n    StormsEye,\n    Cooldowns,\n];\n"],"sourceRoot":""}